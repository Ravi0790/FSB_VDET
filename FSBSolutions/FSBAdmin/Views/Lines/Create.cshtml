@model FSBAdmin.Models.LineViewModel

@{
    ViewBag.Title = "Create";
    ViewBag.Heading = "Line - Create";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>



        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId)

            @Html.DropDownListFor(model => model.CountryId, null, "--Select Country--", htmlAttributes: new { @class = "form-control", id = "countryid" })
            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CompanyId)

            @*@Html.DropDownList("",null, "--Select Company--", htmlAttributes: new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.CompanyId, Enumerable.Empty<SelectListItem>(), "--Select Company--", htmlAttributes: new { @class = "form-control", id = "companyid" })
            @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Line.Plant.PlantName)

            @*@Html.DropDownList("PlantId", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.Line.PlantId, Enumerable.Empty<SelectListItem>(), "--Select Plant--", htmlAttributes: new { @class = "form-control", id = "plantid" })
            @Html.ValidationMessageFor(model => model.Line.Plant.PlantName, "", new { @class = "text-danger" })

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Line.LineName)

            @Html.EditorFor(model => model.Line.LineName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Line.LineName, "", new { @class = "text-danger" })

        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Line.Status, new { @class = "float-left" })

            <div class="checkbox float-left ml-3">
                @Html.EditorFor(model => model.Line.Status)
                @Html.ValidationMessageFor(model => model.Line.Status, "", new { @class = "text-danger" })
            </div>

        </div>

        <button type="submit" class="btn btn-primary hvr-float ripple text-uppercase font-weight-bold w-100 mt-2">Create</button>
    </div>
}

<div class="mt-3">
    @Html.ActionLink("Back to List", "Index", "", new { @class = "redLink" })
</div>

@section Scripts {
    <script>
        hitapi.plants = false;
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
