@model FSBModel.Plant

@{
    ViewBag.Title = "Create";
    ViewBag.Heading = "Plant - Create";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="dvstart">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Company.Country.CountryName)

            @Html.DropDownList("CountryId", null, "--Select Country--", htmlAttributes: new { @class = "form-control", id = "countryid" })
            @Html.ValidationMessageFor(model => model.Company.Country.CountryName, "", new { @class = "text-danger" })

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Company.CompanyName)

            @*@Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.CompanyId, Enumerable.Empty<SelectListItem>(), "--Select Company--", htmlAttributes: new { @class = "form-control", id = "companyid" })
            @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantCode)

            @Html.EditorFor(model => model.PlantCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlantCode, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantName)

            @Html.EditorFor(model => model.PlantName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlantName, "", new { @class = "text-danger" })

        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "float-left" })

            <div class="checkbox float-left ml-3">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>

    <div class="mt-3 text-center">
        <button type="submit" class="btn btn-primary hvr-float ripple text-uppercase font-weight-bold mt-2 mr-5">Create</button> @Html.ActionLink("Back to List", "Index", "", new { @class = "redLink" })
    </div>
}




@section Scripts {
    <script>
        hitapi.company = false;
    </script>


    @Scripts.Render("~/bundles/jqueryval")



}
